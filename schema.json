/*
 * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not
 * use this file except in compliance with the License. A copy of the License
 * is located at http://aws.amazon.com/apache2.0/ or in the "license" file
 *  accompanying this file. This file is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

{
  "Parameter": {
    "title": "Parameter",
    "properties": {
      "trackedByUser": {
        "default": "false",
        "type": "boolean",
        "description": "denotes whether the user explicitly tracked this parameter."
      },
      "nonDefault": {
        "default": "false",
        "type": "boolean",
        "description": "denotes whether the user explicitly changed this parameter from its default value."
      },
      "value": {
        "minLength": 1,
        "type": "string",
        "description": "value of the parameter."
      },
      "typing": {
        "$ref": "#/TypeHint",
        "description": "type of the parameter."
      },
      "name": {
        "minLength": 1,
        "type": "string",
        "description": "name of the parameter."
      }
    },
    "required": [
      "name",
      "typing",
      "value"
    ],
    "description": "parameter of the feature transformation.",
    "type": "object"
  },
  "Tag": {
    "title": "Tag",
    "properties": {
      "value": {
        "minLength": 1,
        "type": "string",
        "description": "value of the tag."
      },
      "name": {
        "minLength": 1,
        "type": "string",
        "description": "name of the tag."
      }
    },
    "required": [
      "name",
      "value"
    ],
    "description": "describes tags for the data used for evaluation.",
    "type": "object"
  },
  "ConfusionMatrix": {
    "properties": {
      "values": {
        "items": {
          "format": "int32",
          "type": "integer"
        },
        "type": "array",
        "description": "values of the confusion matrix in column-major order."
      },
      "classLabels": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "labels for the classes represented in the confusion matrix."
      },
      "numberOfClasses": {
        "minimum": 1,
        "format": "int32",
        "type": "integer",
        "description": "number of classes represented in the confusion matrix."
      }
    },
    "required": [
      "numberOfClasses",
      "values"
    ],
    "description": "a confusion matrix to be stored with evaluation data.",
    "type": "object"
  },
  "Score": {
    "properties": {
      "value": {
        "minLength": 1,
        "type": "string",
        "description": "value of the score."
      },
      "typing": {
        "$ref": "#/TypeHint",
        "description": "type of the value."
      },
      "metric": {
        "minLength": 1,
        "type": "string",
        "description": "metric for the score."
      }
    },
    "required": [
      "metric",
      "typing",
      "value"
    ],
    "description": "a statistic to be stored with evaluation data.",
    "type": "object"
  },
  "ScoreAtTime": {
    "properties": {
      "epoch": {
        "format": "int32",
        "type": "integer",
        "description": "a discrete time unit (e.g. an iteration) to which this score refers to."
      },
      "score": {
        "$ref": "#/Score",
        "description": "the actual score."
      },
      "timestamp": {
        "minimum": 0,
        "format": "int64",
        "type": "integer",
        "description": "time (milliseconds since 1970-01-01)."
      }
    },
    "required": [
      "timestamp",
      "score"
    ],
    "description": "a statistic over time to be stored with training metadata.",
    "type": "object"
  },
  "Evaluation": {
    "title": "Evaluation",
    "properties": {
      "forPredictionId": {
        "minLength": 1,
        "type": "string",
        "description": "identifier of the metadata entry for the predictions on which this evaluation was computed."
      },
      "name": {
        "minLength": 1,
        "type": "string",
        "description": "name of this evaluation."
      },
      "id": {
        "minLength": 1,
        "type": "string",
        "description": "Unique identifier for this metadata entry."
      },
      "comments": {
        "minLength": 1,
        "type": "string",
        "description": "comments for this evaluation entry."
      },
      "annotations": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object"
      },
      "tags": {
        "items": {
          "$ref": "#/Tag"
        },
        "description": "tags to describe the evaluation data.",
        "type": "array"
      },
      "confusionMatrix": {
        "$ref": "#/ConfusionMatrix",
        "description": "an optional confusion matrix to store with the evaluation."
      },
      "scores": {
        "items": {
          "$ref": "#/Score"
        },
        "description": "scores for different metrics.",
        "type": "array"
      },
      "computedByModelId": {
        "minLength": 1,
        "type": "string",
        "description": "identifier of the model that was used to compute this evaluation."
      },
      "computedOnDatasetId": {
        "minLength": 1,
        "type": "string",
        "description": "identifier of the dataset for which this evaluation have been computed."
      },
      "creationTime": {
        "minimum": 0,
        "format": "int64",
        "type": "integer",
        "description": "Creation time (milliseconds since 1970-01-01)."
      },
      "creatorTeam": {
        "minLength": 1,
        "type": "string",
        "description": "team of the user who created this evaluation."
      },
      "creator": {
        "minLength": 1,
        "type": "string",
        "description": "name of the user who created this evaluation."
      }
    },
    "required": [
      "creationTime",
      "computedOnDatasetId",
      "computedByModelId"
    ],
    "description": "evaluation of predictions of a model on a dataset.",
    "type": "object"
  },
  "DatasetMetadata": {
    "title": "DatasetMetadata",
    "properties": {
      "id": {
        "minLength": 1,
        "type": "string",
        "description": "Unique identifier for this metadata entry."
      },
      "derivedFromDatasetId": {
        "minLength": 1,
        "type": "string",
        "description": "identified of the metadata of the dataset from which this dataset was derived, if exists."
      },
      "comments": {
        "minLength": 1,
        "type": "string",
        "description": "comments for this dataset metadata entry."
      },
      "annotations": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object",
        "description": "custom key-value data to store with this dataset metadata entry"
      },
      "creator": {
        "minLength": 1,
        "type": "string",
        "description": "name of the user who created this dataset."
      },
      "histograms": {
        "items": {
          "$ref": "#/Histogram"
        },
        "type": "array",
        "description": "histograms related to this dataset."
      },
      "dataStatistics": {
        "items": {
          "$ref": "#/DataStatistic"
        },
        "type": "array",
        "description": "statistics related to this dataset."
      },
      "schema": {
        "minItems": 1,
        "items": {
          "$ref": "#/TypedColumn"
        },
        "type": "array",
        "description": "a description of the names and types of the attributes of the referenced dataset."
      },
      "version": {
        "minLength": 1,
        "type": "string",
        "description": "version of the dataset."
      },
      "location": {
        "minLength": 1,
        "type": "string",
        "description": "a pointer to the location where users can read the contents of the dataset."
      },
      "name": {
        "minLength": 1,
        "type": "string",
        "description": "name of this dataset."
      },
      "creationTime": {
        "minimum": 0,
        "format": "int64",
        "type": "integer",
        "description": "Creation time (milliseconds since 1970-01-01)."
      },
      "creatorTeam": {
        "minLength": 1,
        "type": "string",
        "description": "team of the user who created this dataset."
      }
    },
    "required": [
      "name",
      "location"
    ],
    "description": "Metadata describing input datasets.",
    "type": "object"
  },
  "Histogram": {
    "properties": {
      "bucketValues": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "list of values for the buckets of the histogram."
      },
      "bucketLabels": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "optional list of labels for the buckets of the histogram."
      },
      "typing": {
        "$ref": "#/TypeHint",
        "description": "type of the bucket values."
      },
      "name": {
        "minLength": 1,
        "type": "string",
        "description": "optional name for the histogram."
      },
      "column": {
        "minLength": 1,
        "type": "string",
        "description": "name of the column to which this histogram refers."
      }
    },
    "required": [
      "column",
      "typing",
      "bucketValues"
    ],
    "description": "a histogram for a column of a dataset.",
    "type": "object"
  },
  "Transform": {
    "title": "FeatureTransform",
    "properties": {
      "name": {
        "minLength": 1,
        "type": "string",
        "description": "name of the feature transformation."
      },
      "id": {
        "minLength": 1,
        "type": "string",
        "description": "Unique identifier for this metadata entry."
      },
      "fromFramework": {
        "minLength": 1,
        "type": "string",
        "description": "framework used to train the model."
      },
      "version": {
        "minLength": 1,
        "type": "string",
        "description": "version of the model."
      },
      "state": {
        "minLength": 1,
        "type": "string",
        "description": "encoded internal state of the feature transformation (optional)"
      },
      "fromFrameworkVersion": {
        "minLength": 1,
        "type": "string",
        "description": "version of the framework used to train the model."
      },
      "input": {
        "items": {
          "$ref": "#/TypedColumn"
        },
        "description": "required input columns for the feature transformation.",
        "type": "array"
      },
      "inputTransforms": {
        "items": {
          "type": "string"
        },
        "description": "ids of Transforms that produce the input for this Transform in the transformation DAG.",
        "type": "array"
      },
      "parameters": {
        "items": {
          "$ref": "#/Parameter"
        },
        "description": "parameters of the feature transformation.",
        "type": "array"
      },
      "output": {
        "items": {
          "$ref": "#/TypedColumn"
        },
        "description": "output columns of the feature transformation.",
        "type": "array"
      }
    },
    "required": [
      "id",
      "name"
    ],
    "description": "a transformation applied to the input dataset.",
    "type": "object"
  },
  "DataStatistic": {
    "properties": {
      "value": {
        "minLength": 1,
        "type": "string",
        "description": "value of the statistic."
      },
      "typing": {
        "$ref": "#/TypeHint",
        "description": "type of the value."
      },
      "columns": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "columns to which this statistic corresponds. leave this empty for statistics corresponding the whole dataset."
      },
      "name": {
        "minLength": 1,
        "type": "string",
        "description": "name of the data statistic."
      }
    },
    "required": [
      "name",
      "typing",
      "value"
    ],
    "description": "a statistic about a dataset (or columns of it).",
    "type": "object"
  },
  "TrainingRun": {
    "properties": {
      "creator": {
        "minLength": 1,
        "type": "string",
        "description": "name of the user who created this model."
      },
      "id": {
        "minLength": 1,
        "type": "string",
        "description": "Unique identifier for this metadata entry."
      },
      "environment": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object",
        "description": "custom key-value data to store with this training run entry"
      },
      "scoresOverTime": {
        "items": {
          "$ref": "#/ScoreAtTime"
        },
        "description": "scores collected during the training run.",
        "type": "array"
      },
      "hyperparameters": {
        "items": {
          "$ref": "#/Parameter"
        },
        "description": "hyperparameters used when training the model.",
        "type": "array"
      },
      "transforms": {
        "items": {
          "$ref": "#/Transform"
        },
        "description": "the transformations applied to the input data.",
        "type": "array"
      },
      "endTime": {
        "minimum": 0,
        "format": "int64",
        "type": "integer",
        "description": "end time (milliseconds since 1970-01-01)."
      },
      "startTime": {
        "minimum": 0,
        "format": "int64",
        "type": "integer",
        "description": "start time (milliseconds since 1970-01-01)."
      },
      "forModelId": {
        "minLength": 1,
        "description": "id of the corresponding model metadata entry.",
        "type": "string"
      },
      "name": {
        "minLength": 1,
        "type": "string",
        "description": "name of this training run entry."
      },
      "creationTime": {
        "minimum": 0,
        "format": "int64",
        "type": "integer",
        "description": "Creation time (milliseconds since 1970-01-01)."
      },
      "creatorTeam": {
        "minLength": 1,
        "type": "string",
        "description": "team of the user who created this model."
      },
      "annotations": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object",
        "description": "custom key-value data to store with this training run entry"
      },
      "comments": {
        "minLength": 1,
        "type": "string",
        "description": "comments for this model training run entry."
      }
    },
    "required": [
      "id",
      "creationTime",
      "forModelId"
    ],
    "description": "training run of a model.",
    "type": "object"
  },
  "TypeHint": {
    "enum": [
      "UNKNOWN",
      "BOOLEAN",
      "LONG",
      "FLOAT",
      "STRING",
      "STRING_ARRAY",
      "INT",
      "INT_ARRAY",
      "DOUBLE",
      "DOUBLE_ARRAY",
      "VECTOR",
      "STRUCT_ARRAY"
    ],
    "title": "TypeHint",
    "description": "describes the type of data items.",
    "type": "string"
  },
  "TypedColumn": {
    "title": "TypedColumn",
    "properties": {
      "typing": {
        "$ref": "#/TypeHint",
        "description": "type of the column."
      },
      "name": {
        "minLength": 1,
        "type": "string",
        "description": "name of the column."
      }
    },
    "required": [
      "name",
      "typing"
    ],
    "description": "a column with its type.",
    "type": "object"
  },
  "PredictionMetadata": {
    "title": "PredictionMetadata",
    "properties": {
      "computedOnDatasetId": {
        "minLength": 1,
        "type": "string",
        "description": "identifier of the dataset for which these predictions have been computed."
      },
      "computedByModelId": {
        "minLength": 1,
        "type": "string",
        "description": "identifier of the model that was used to compute these predictions."
      },
      "location": {
        "minLength": 1,
        "type": "string",
        "description": "a pointer to the actual prediction data described by the metadata entry."
      },
      "comments": {
        "minLength": 1,
        "type": "string",
        "description": "comments for this prediction metadata entry."
      },
      "annotations": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object",
        "description": "custom key-value data to store with this prediction metadata entry"
      },
      "schema": {
        "items": {
          "$ref": "#/TypedColumn"
        },
        "description": "schema for the computed predictions.",
        "type": "array"
      },
      "creatorTeam": {
        "minLength": 1,
        "type": "string",
        "description": "team of the user who created this prediction."
      },
      "creationTime": {
        "minimum": 0,
        "format": "int64",
        "type": "integer",
        "description": "Creation time (milliseconds since 1970-01-01)."
      },
      "creator": {
        "minLength": 1,
        "type": "string",
        "description": "name of the user who created this prediction."
      },
      "name": {
        "minLength": 1,
        "type": "string",
        "description": "name of this prediction."
      },
      "id": {
        "minLength": 1,
        "type": "string",
        "description": "Unique identifier for this metadata entry."
      }
    },
    "required": [
      "creationTime",
      "computedOnDatasetId",
      "computedByModelId"
    ],
    "description": "metadata for predictions computed by a model on a dataset.",
    "type": "object"
  },
  "ModelMetadata": {
    "title": "ModelMetadata",
    "properties": {
      "comments": {
        "minLength": 1,
        "type": "string",
        "description": "comments for this model metadata entry."
      },
      "fromFrameworkVersion": {
        "minLength": 1,
        "type": "string",
        "description": "version of the framework used to train the model."
      },
      "fromFramework": {
        "minLength": 1,
        "type": "string",
        "description": "framework used to train the model."
      },
      "version": {
        "minLength": 1,
        "type": "string",
        "description": "version of the model."
      },
      "learningAlgorithm": {
        "minLength": 1,
        "type": "string",
        "description": "name of the learning algorithm that was used to train the model."
      },
      "trainedOnDatasetId": {
        "minLength": 1,
        "type": "string",
        "description": "identifier of the dataset on which this model has been trained."
      },
      "name": {
        "minLength": 1,
        "type": "string",
        "description": "name of this model metadata entry."
      },
      "annotations": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object",
        "description": "custom key-value data to store with this model metadata entry"
      },
      "creator": {
        "minLength": 1,
        "type": "string",
        "description": "name of the user who created this model."
      },
      "creatorTeam": {
        "minLength": 1,
        "type": "string",
        "description": "team of the user who created this model."
      },
      "creationTime": {
        "minimum": 0,
        "format": "int64",
        "type": "integer",
        "description": "Creation time (milliseconds since 1970-01-01)."
      },
      "id": {
        "minLength": 1,
        "type": "string",
        "description": "Unique identifier for this metadata entry."
      },
      "hyperparameters": {
        "items": {
          "$ref": "#/Parameter"
        },
        "description": "hyperparameters used when training the model.",
        "type": "array"
      },
      "location": {
        "minLength": 1,
        "type": "string",
        "description": "a pointer to a location where users can read the contents of the model."
      },
      "transforms": {
        "items": {
          "$ref": "#/Transform"
        },
        "description": "the transformations applied to the input data.",
        "type": "array"
      },
      "input": {
        "items": {
          "$ref": "#/TypedColumn"
        },
        "description": "the input columns which this model consumes from the transformed data.",
        "type": "array"
      }
    },
    "required": [
      "creationTime",
      "name",
      "trainedOnDatasetId",
      "learningAlgorithm"
    ],
    "description": "Metadata for models trained on an input dataset.",
    "type": "object"
  },
  "TrainingState": {
    "enum": [
      "TRAINING",
      "FINISHED",
      "FAILED"
    ],
    "title": "TrainingState",
    "description": "describes the state of a model during training.",
    "type": "string"
  }
}
